plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'kotlin-parcelize'
    // Add the App Distribution Gradle plugin
    id 'com.google.firebase.appdistribution'
    id 'kotlin-kapt'
}

def getVersionCodeFromParameter = { ->
    def code = project.hasProperty('versionCode') ? versionCode.toInteger() : 1
    println "VersionCode is set to $code"
    return code
}

def getVersionNameFromParameter = { ->
    def name = project.hasProperty('versionName') ? versionName : "1.0"
    println "VersionName is set to $name"
    return name
}

android {
    namespace 'kr.co.hs.sudoku'
    compileSdk 34

    defaultConfig {
        applicationId "kr.co.hs.sudoku"
        minSdk 24
        targetSdk 34
        versionCode getVersionCodeFromParameter()
        versionName getVersionNameFromParameter()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            firebaseAppDistribution {
                appId="1:616519348076:android:7e79f73996ffc659234d49"
                artifactType="APK"
                releaseNotesFile="app-distribution-release-note.txt"
                testersFile="app-distribution-testers.txt"
            }
        }
        alpha {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.releaseWithSignedKey
            testCoverageEnabled true
//            firebaseCrashlytics {
//                mappingFileUploadEnabled true
//            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        dataBinding true
    }

    packagingOptions {
        jniLibs { useLegacyPackaging = true }
        resources {
            excludes += [
                    'META-INF/DEPENDENCIES',
                    'META-INF/NOTICE',
                    'META-INF/LICENSE-notice.md',
                    'META-INF/LICENSE',
                    'META-INF/LICENSE.md',
                    'META-INF/LICENSE.txt',
                    'META-INF/NOTICE.txt'
            ]
        }
    }
}


dependencies {

    //Google Play Service
    implementation "com.google.android.gms:play-services-games-v2:19.0.0"
    //Tasks await 함수 사용을 위해 종속 항목 추가
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.6.4'

    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    testImplementation 'junit:junit:4.13.2'

    implementation project(path: ':domain')
    implementation project(path: ':data')

    implementation 'androidx.activity:activity-ktx:1.8.2'
    implementation 'androidx.fragment:fragment-ktx:1.6.2'

    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:31.2.2')
    // Add the dependency for the Firebase SDK for Google Analytics
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-config-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'

    implementation 'com.tbuonomo:dotsindicator:4.3'

    implementation 'androidx.preference:preference-ktx:1.2.1'

    implementation 'io.coil-kt:coil:2.3.0'

    implementation 'com.airbnb.android:lottie:5.2.0'

    implementation 'androidx.datastore:datastore-preferences:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.2'

    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    def coroutines_version = '1.6.4'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    def mockk_version = '1.13.8'
    testImplementation "io.mockk:mockk:$mockk_version"
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"


    // Core library
    androidTestImplementation 'androidx.test:core:1.5.0'

    // AndroidJUnitRunner and JUnit Rules
//    androidTestImplementation 'androidx.test:runner:1.5.2'
//    androidTestImplementation 'androidx.test:rules:1.5.0'

    // Assertions
    def android_junit_version = '1.1.5'
    androidTestImplementation "androidx.test.ext:junit:$android_junit_version"
    androidTestImplementation "androidx.test.ext:junit-ktx:$android_junit_version"
//    androidTestImplementation 'androidx.test.ext:truth:1.5.0'
//    androidTestImplementation 'com.google.truth:truth:1.1.3'

    // Espresso dependencies
    def espresso_version = '3.5.1'
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
//    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
//    androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso_version"
//    androidTestImplementation "androidx.test.espresso:espresso-accessibility:$espresso_version"
//    androidTestImplementation "androidx.test.espresso:espresso-web:$espresso_version"
//    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espresso_version"

    // The following Espresso dependency can be either "implementation"
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APK's compile classpath or the test APK
    // classpath.
//    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$espresso_version"

    def fragment_version = "1.6.2"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"

    implementation 'androidx.core:core-splashscreen:1.1.0-alpha02'

    def paging_version = "3.2.1"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"

    implementation "androidx.coordinatorlayout:coordinatorlayout:1.2.0"
}


// flavor를 사용하는 경우에 커버리지 측정에 사용할 Flavor 이름을 설정합니다.
ext {
    pFlavor = ''
}

apply from: "$rootDir/gradle/jacoco.gradle"